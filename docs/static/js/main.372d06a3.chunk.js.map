{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","hooks/useFetch.js","components/pokemon/PokemonScreen.js","helpers/pokeApiHandler.js","components/pokemon/PokeCard.js","components/pokemon/PokeList.js","hooks/usePokeApi.js","components/gen_1/Gen1_Screen.js","components/search/SearchForm.js","hooks/useForm.js","components/search/SearchResult.js","components/search/SearchScreen.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","PokeApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","dispatch","useContext","navigate","useNavigate","className","onClick","name","lastPath","localStorage","getItem","replace","useFetch","url","isMounted","useRef","useState","data","loading","error","setstate","useEffect","current","fetch","then","resp","json","console","log","catch","e","PokemonScreen","pokemonId","useParams","pokemon","to","id","sprites","height","weight","src","other","front_default","alt","map","slot","simpleFetch","a","pokemonsDetails","fetchPokemonList","pokemon_Endpoint","fetchPokemonDetails","pokemonList","pokemonDetails","Promise","resolve","all","values","startFetchingPokemonDetails","results","PokeCard","style","maxWidth","PokeList","usePokeApi","width","display","justifyContent","Gen1_Screen","SearchForm","q","initialState","setValues","target","value","toLowerCase","useForm","searchText","formValues","handleInputChanges","onSubmit","preventDefault","length","placeholder","autoComplete","onChange","SearchResult","SearchScreen","location","useLocation","queryStinrg","parse","search","Navbar","user","isActive","flexBasis","DashboardRoutes","path","element","PrivateRoute","children","pathname","setItem","PublicRoute","AppRouter","PokeApp","useReducer","JSON","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.372d06a3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport  const AuthContext = createContext();\r\n","\r\nexport const types = {\r\n  \r\n    login: '[auth] login',\r\n    logout : '[auth] logout',\r\n    \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n    const handleLogin = () => {\r\n\r\n\r\n        const action = {\r\n            type: types.login,\r\n            payload: {\r\n                name: \"Carlos\"\r\n            }\r\n        }\r\n        dispatch(action);\r\n\r\n\r\n        const lastPath = localStorage.getItem(\"lastPath\") || \"/\" // al logearse, tira al user en la ultima pagina q visito, y si no existe (ha visitado la pagina), lo tira a la pagina principal \r\n\r\n        navigate(lastPath, {\r\n            replace: true //remplaza el link por el que se esta poniendo aqui, entonces al retroceder en la pagina siguiente, no vulve a aparecer la pagina actual\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5\" >\r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const isMounted = useRef(true); \r\n    const [state, setstate] = useState({ data: null, loading: true, error: null });\r\n\r\n\r\n    useEffect(() => { \r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setstate({ data: null, loading: true, error: null })\r\n\r\n        fetch(url)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n\r\n                if (isMounted.current) {\r\n\r\n                    setstate({\r\n                        loading: false,\r\n                        error: null,\r\n                        data: data\r\n                    })\r\n\r\n                } else {\r\n                    console.log('setState no se llamó');\r\n                }\r\n\r\n\r\n            }).catch(e => {\r\n                console.log(e)\r\n                setstate({...setstate, error: e, loading: false})\r\n            }\r\n                )\r\n\r\n    }, [url])\r\n\r\n    return state;\r\n\r\n}\r\n","import { useParams, Navigate, useNavigate } from 'react-router-dom'\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\n\r\nexport const PokemonScreen = () => {\r\n\r\n    const params = useParams();   //para extraer los parametros que vayan en el url ( lo vamos a usar para extraer pokemon.id)\r\n    const { pokemonId } = params;\r\n    const navigate = useNavigate();\r\n\r\n    const { data: pokemon, loading } = useFetch(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\r\n\r\n\r\n\r\n    if (!pokemon && !loading) {\r\n        return <Navigate to='/' />\r\n    } //if que si el url esta malo o no existe el pokemon, lo redirecciona a la pagina '/'\r\n\r\n\r\n    const {\r\n        id,\r\n        name,\r\n        sprites,\r\n        height,\r\n        weight,\r\n        types\r\n    } = !loading && pokemon;\r\n\r\n\r\n    const handleReturn = () => {\r\n\r\n        navigate(-1); //se devulve a la pagina anterior\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {!loading &&\r\n\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-4\">\r\n                        <img\r\n                            src={sprites.other['official-artwork'].front_default}\r\n                            alt={name}\r\n                            className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                        ></img>\r\n                    </div>\r\n\r\n                    <div className=\"col-8\">\r\n                        <h3>{name} # {id}</h3>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\"> <b>Height:</b> {height * 10} cm</li>\r\n                            <li className=\"list-group-item\"> <b>Weight:</b> {weight / 10} kg</li>\r\n                        </ul>\r\n                        <br />\r\n                        <h5>Types</h5>\r\n                        <ul>\r\n                            {types.map(type => (\r\n                                <li key={type.slot}> {(type.type.name)} </li>\r\n                            ))}\r\n                        </ul>\r\n\r\n                        <button\r\n                            className=\"btn btn-outline-info\"\r\n                            onClick={handleReturn}\r\n                        >\r\n                            Return\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","\r\n\r\nexport const simpleFetch = async (url) => {\r\n\r\n    try {\r\n        const pokemonsDetails = await fetch(url)\r\n        const data  = await pokemonsDetails.json()\r\n\r\n        return data\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const fetchPokemonList = async (pokemon_Endpoint = 'pokemon?limit=151') => {\r\n\r\n    const url = `https://pokeapi.co/api/v2/${pokemon_Endpoint}`\r\n\r\n    return await simpleFetch(url)\r\n}\r\n\r\n\r\nexport const fetchPokemonDetails = async(pokemonList) => {\r\n\r\n    const pokemonDetails = pokemonList.map((pokemon) => (\r\n\r\n        new Promise((resolve) => {\r\n            const details = simpleFetch(pokemon.url)\r\n            resolve(details)\r\n        })\r\n    ))\r\n    \r\n    const values = await Promise.all(pokemonDetails)\r\n\r\n    return values\r\n\r\n}\r\n\r\n\r\nexport const startFetchingPokemonDetails = async(pokemon_Endpoint) => {\r\n    \r\n    const pokemonList = await fetchPokemonList(pokemon_Endpoint)\r\n    return await fetchPokemonDetails(pokemonList.results)\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport const PokeCard = ({ pokemon }) => {\r\n\r\n\r\n    const { id,\r\n        name,\r\n        sprites } = pokemon;\r\n\r\n    return (\r\n\r\n        <div className=\"card ms-3 animate__animated animate__zoomIn\" style={{ maxWidth: 540 }}>\r\n\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={sprites.other['official-artwork'].front_default} className=\"card-img\" alt={\"pokemon\"} style={{ height: \"80%\" }} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{name}</h5>\r\n                        <p className=\"card-text\"> #{id}</p>\r\n\r\n                        <Link to={`/pokemon/${id}`}> \r\n                            More...\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { usePokeApi } from '../../hooks/usePokeApi'\r\nimport { PokeCard } from './PokeCard'\r\n\r\nexport const PokeList = () => {\r\n\r\n    const { data, loading } = usePokeApi('pokemon?limit=151')\r\n\r\n    return (\r\n        <div className=\"card-columns\" >\r\n\r\n            {\r\n\r\n\r\n                loading ?\r\n\r\n                    <div style={{ width: '80vw', display: 'flex', justifyContent: 'space-around' }}>\r\n                        <h1>Loading...</h1>\r\n                    </div>\r\n\r\n                    :\r\n\r\n                    data.map((pokemon) => {\r\n                        return <PokeCard key={pokemon.id}\r\n                            pokemon={pokemon}\r\n                        />\r\n                    })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { startFetchingPokemonDetails } from \"../helpers/pokeApiHandler\";\r\n\r\n\r\nexport const usePokeApi = (url) => {\r\n\r\n    const isMounted = useRef(true);\r\n    const [state, setstate] = useState({ data: null, loading: true, error: null });\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        startFetchingPokemonDetails(url).then(data => {\r\n\r\n            if (isMounted.current) {\r\n\r\n                setstate({\r\n                    loading: false,\r\n                    error: null,\r\n                    data: data\r\n                })\r\n\r\n\r\n            } else {\r\n                console.log('setState no se llamó');\r\n            }\r\n\r\n        })\r\n    }, [url])\r\n\r\n    return state;\r\n\r\n}\r\n","import { PokeList } from '../pokemon/PokeList'\r\n\r\nexport const Gen1_Screen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>1st Generation</h1>\r\n\r\n            {\r\n                <PokeList ></PokeList>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const SearchForm = ({q = \"\"}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [formValues, handleInputChanges] = useForm({\r\n        searchText: q\r\n    });\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (searchText.length === 0) {\r\n            navigate(``);\r\n            return\r\n        }\r\n\r\n        navigate(`?q=${searchText}`); //transforma el url para que contenga un parametro o un query \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='col-5'>\r\n                <h4>Search Form</h4>\r\n                <hr />\r\n                <form onSubmit={handleSearch}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Find your pokemon\"\r\n                        className=\"form-control\"\r\n                        name=\"searchText\"\r\n                        autoComplete=\"off\"\r\n                        value={searchText}\r\n                        onChange={handleInputChanges}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn m1 btn-block btn-outline-primary\"\r\n                    >\r\n                        Search...\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = () =>{\r\n      setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n    \r\n        setValues({\r\n          ...values,\r\n         [e.target.name] : e.target.value.toLowerCase() \r\n        });\r\n    \r\n     }\r\n\r\n     return [values,handleInputChange,reset]; \r\n\r\n}\r\n","import { useFetch } from '../../hooks/useFetch';\r\nimport { PokeCard } from '../pokemon/PokeCard';\r\n\r\n\r\nexport const SearchResult = ({ q }) => {\r\n\r\n    const { data: pokemon, loading } = useFetch(`https://pokeapi.co/api/v2/pokemon/${q}`)\r\n\r\n    return (\r\n        <div className=\"col-7\">\r\n            <h4>Results</h4>\r\n            <hr />\r\n\r\n            {\r\n                (!q)\r\n                    ? <div className=\"alert alert-info\"> Search a pokemon </div>\r\n                    : (loading)\r\n                        ? <div className=\"alert alert-info\"> Searching... </div>\r\n                        : (!pokemon) && <div className=\"alert alert-danger\"> there's no pokemon with name or id ={'> '} {q}</div>\r\n            }\r\n\r\n            {\r\n                (q !== \"\" && !loading && !!pokemon) &&\r\n\r\n                <PokeCard pokemon={pokemon} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import queryStinrg from 'query-string'\r\nimport {  useLocation } from 'react-router-dom';\r\nimport { SearchForm } from './SearchForm';\r\nimport { SearchResult } from './SearchResult';\r\n\r\nexport const SearchScreen = () => {\r\n\r\n    const location = useLocation();   //extrae el url\r\n    const { q } = queryStinrg.parse(location.search)  //divide cada query del url (en este caso, solo se ocupa el q (nombre del query q se determino en la funcion handleSearch (en este caso q))). Se pone q=\"\" por si el valor es vacio, no me tire un undefined \r\n\r\n    return (\r\n        <>\r\n                    <h1>Search Screen</h1>\r\n                    <hr />\r\n                    <div className='row'>\r\n                        <SearchForm q={q} />\r\n                        <SearchResult q={q} />\r\n                    </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useNavigate  } from 'react-router-dom'\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const pokelogo = './assets/Pokémon_logo.png'\r\n\r\n    const { user: { name }, dispatch } = useContext(AuthContext);\r\n    const navigate = useNavigate(); \r\n\r\n    const handleLogout = () => {\r\n\r\n        const action = {\r\n            type: types.logout\r\n        }\r\n\r\n        dispatch(action);\r\n        navigate('/login', {\r\n            replace: true //remplaza el link por el que se esta poniendo aqui, entonces al retroceder en la pagina siguiente, no vulve a aparecer la pagina actual\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n            <Link\r\n                className=\"navbar-brand\"\r\n                to=\"/\"\r\n            >\r\n                <img src={pokelogo} alt={'pokelogo'} style={{height:\"50px\"}}></img>\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n               \r\n                    <NavLink\r\n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\r\n                        to=\"/marvel\"\r\n                    >\r\n                        1st Gen\r\n                    </NavLink>\r\n\r\n                   \r\n\r\n                    <NavLink\r\n                        className={ ({ isActive }) => 'nav-item nav-link ' + (isActive ? 'active' : '') }\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\" style={{flexBasis: \"content\"}}>\r\n                <ul className=\"navbar-nav ms-auto\">\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {\r\n                            name\r\n                        }\r\n                    </span>\r\n                    <button\r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Route, Routes, Navigate  } from 'react-router-dom'\r\nimport { PokemonScreen } from '../components/pokemon/PokemonScreen'\r\nimport { Gen1_Screen } from '../components/gen_1/Gen1_Screen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n\r\n            <Navbar/>\r\n\r\n            <div className=\"container mt-2\">\r\n\r\n                <Routes>\r\n\r\n                    <Route  path=\"1stGen\" element={<Gen1_Screen/>} />\r\n                    <Route  path=\"pokemon/:pokemonId\" element={<PokemonScreen/>} /> {/* con el \" : \" se refiere que va a recivir un argumento  por el url*/}\r\n                    <Route  path=\"search\" element={<SearchScreen/>}/>\r\n\r\n                    <Route path=\"/*\" element={<Navigate to='1stGen'/>} />  \r\n\r\n                </Routes>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Navigate  ,useLocation} from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\n\r\nexport const PrivateRoute = ({children}) => { //llama a la clases hijas\r\n\r\n    const {user} = useContext(AuthContext) \r\n\r\n    const { pathname, search } = useLocation();\r\n    \r\n    localStorage.setItem('lastPath', pathname + search );// guarda la ultima pagina que visito por si se sale el user y vuelve a entrar, lo tire en la ultima pagina q visto\r\n\r\n    return (\r\n\r\n        user.logged ? children : <Navigate to='/login'/>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from 'react'\r\nimport { Navigate} from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\n  \r\n\r\nexport const PublicRoute = ({children}) => { //llama a la clases hijas\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    \r\n    return user.logged\r\n        ? <Navigate to=\"/1stGen\" />\r\n        : children\r\n        // si esta logeado vaya a /marvel, sino vaya al componente hijo\r\n}\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {   //login tiene un estilo (con el navbar) y los que estan dentro de DashBoardRoutes tienen otros\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <Routes>\r\n\r\n        <Route path=\"/login\" element={\r\n          <PublicRoute>\r\n            <LoginScreen />\r\n          </PublicRoute>\r\n        }\r\n        />\r\n\r\n        <Route path=\"/*\" element={  //  el * en el /* significa el siguiente elemento que esta en dashboardRoutes\r\n          <PrivateRoute>\r\n            <DashboardRoutes />\r\n          </PrivateRoute>\r\n        }\r\n        />\r\n\r\n      </Routes>\r\n    </Router>\r\n\r\n  )\r\n}\r\n","import  { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const PokeApp = () => {\r\n\r\n    const init = () => {\r\n        return JSON.parse(localStorage.getItem('user')) || { logged: false }\r\n    }\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    useEffect(() => {\r\n\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n\r\n    }, [user])\r\n\r\n\r\n    return (\r\n        \r\n\r\n            <AuthContext.Provider value={{ user, dispatch }}> {/* AuthContext es para hacer cotrol de usuarios, para que si alguien aun no ha hecho login, no pueda ir a otro url de la pagina, aparete de la pagina de login */}\r\n\r\n                <AppRouter />\r\n\r\n            </AuthContext.Provider> //.Provaider es para compartir la info de value en todos los hijos de AppRouter y demas que esten entre estos elementos <></>*/}\r\n\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { PokeApp } from './PokeApp';\r\n\r\n\r\nReactDOM.render(\r\n    <PokeApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}